//다시 풀기
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Deque;
import java.util.LinkedList;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws  IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		Deque<Integer> que = new LinkedList<>();
		
		int N = Integer.parseInt(br.readLine());
		
		for(int i=0;i<N;i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			String s = st.nextToken();
			
			if(s.equals("push"))
				que.push(Integer.parseInt(st.nextToken()));
			else if(s.equals("pop")) {
				if(que.isEmpty())
					sb.append(-1+"\n");
				else
					sb.append(que.poll()+"\n");
			}
			else if(s.equals("size")) {
				sb.append(que.size()+"\n");
			}
			else if(s.equals("empty")) {
				if(que.isEmpty())
					sb.append(1+"\n");
				else
					sb.append(0+"\n");
			}
			else if(s.equals("front")) {
				if(que.isEmpty())
					sb.append(-1+"\n");
				else
					sb.append(que.peek()+"\n");
			}
			else {
				if(que.isEmpty())
					sb.append(-1+"\n");
				else 
					sb.append(que.peekLast()+"\n");
			}
				
		}
		System.out.println(sb);
	}
}
