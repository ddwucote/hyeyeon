
//다시 풀기!!!!!
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.Deque;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws  IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		
		int tc = Integer.parseInt(br.readLine());
		
		for(int i=0;i<tc;i++) {
			StringTokenizer st1 = new StringTokenizer(br.readLine());
			int N = Integer.parseInt(st1.nextToken());
			int M = Integer.parseInt(st1.nextToken());
			StringTokenizer st2 = new StringTokenizer(br.readLine());
			LinkedList<Integer> que = new LinkedList<>();
			LinkedList<Integer> index_que = new LinkedList<>();

			for(int j=0;j<N;j++) {
				que.offer(Integer.parseInt(st2.nextToken()));
				index_que.offer(j);
			}
			
			int cnt = 1;
			while(!que.isEmpty()) {
				int max = Collections.max(que);
				int value = que.poll();
				int value_index = index_que.poll();
				
				if(value == max) {
					if(value_index == M) {
						sb.append(cnt+"\n");
						break;
					}
					cnt++;
				}
				else {
					que.offer(value);
					index_que.offer(value_index);
				}
			}
			
		}
		
		
		System.out.println(sb);
			
		
	}
}

